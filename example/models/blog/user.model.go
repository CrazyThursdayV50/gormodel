package blog

import "time"

/* ======================
** DO NOT EDIT THIS FILE!
** ======================
** GENERATED WITH GOMODEL
** Time: 2025-03-09T13:35:39+08:00
** Author: Gormodel
 */

type User struct {
	Id          int64      `gorm:"column:id;type:INT UNSIGNED;primaryKey;not null;autoIncrement" json:"id"`
	Username    string     `gorm:"column:username;type:VARCHAR(50);size:50;uniqueIndex:uk_username;not null" json:"username"`
	Password    string     `gorm:"column:password;type:VARCHAR(100);size:100;not null" json:"password"`
	Email       string     `gorm:"column:email;type:VARCHAR(100);size:100;uniqueIndex:uk_email;not null" json:"email"`
	Nickname    string     `gorm:"column:nickname;type:VARCHAR(50);size:50;not null;default:''" json:"nickname"`
	Avatar      string     `gorm:"column:avatar;type:VARCHAR(255);size:255;not null;default:''" json:"avatar"`
	Bio         *string    `gorm:"column:bio;type:TEXT" json:"bio"`
	Status      int64      `gorm:"column:status;type:TINYINT;index:idx_status;not null;default:1" json:"status"`
	Role        int64      `gorm:"column:role;type:TINYINT;not null;default:1" json:"role"`
	LastLoginAt *time.Time `gorm:"column:last_login_at;type:DATETIME;default:NULL COMMENT " json:"last_login_at"`
	CreatedAt   time.Time  `gorm:"column:created_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt   time.Time  `gorm:"column:updated_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP" json:"updated_at"`
}

func user_id() Column[int64] {
	return "id"
}

func (s *User) ColumnId() Column[int64] {
	return user_id()
}

func user_username() Column[string] {
	return "username"
}

func (s *User) ColumnUsername() Column[string] {
	return user_username()
}

func user_password() Column[string] {
	return "password"
}

func (s *User) ColumnPassword() Column[string] {
	return user_password()
}

func user_email() Column[string] {
	return "email"
}

func (s *User) ColumnEmail() Column[string] {
	return user_email()
}

func user_nickname() Column[string] {
	return "nickname"
}

func (s *User) ColumnNickname() Column[string] {
	return user_nickname()
}

func user_avatar() Column[string] {
	return "avatar"
}

func (s *User) ColumnAvatar() Column[string] {
	return user_avatar()
}

func user_bio() Column[*string] {
	return "bio"
}

func (s *User) ColumnBio() Column[*string] {
	return user_bio()
}

func user_status() Column[int64] {
	return "status"
}

func (s *User) ColumnStatus() Column[int64] {
	return user_status()
}

func user_role() Column[int64] {
	return "role"
}

func (s *User) ColumnRole() Column[int64] {
	return user_role()
}

func user_last_login_at() Column[*time.Time] {
	return "last_login_at"
}

func (s *User) ColumnLastLoginAt() Column[*time.Time] {
	return user_last_login_at()
}

func user_created_at() Column[time.Time] {
	return "created_at"
}

func (s *User) ColumnCreatedAt() Column[time.Time] {
	return user_created_at()
}

func user_updated_at() Column[time.Time] {
	return "updated_at"
}

func (s *User) ColumnUpdatedAt() Column[time.Time] {
	return user_updated_at()
}

func (t *User) TableName() string {
	return Schema() + ".user"
}
