package blog

import "time"

/* ======================
** DO NOT EDIT THIS FILE!
** ======================
** GENERATED WITH GOMODEL
** Time: 2025-03-09T13:35:39+08:00
** Author: Gormodel
 */

type Category struct {
	Id          int64     `gorm:"column:id;type:INT UNSIGNED;primaryKey;not null;autoIncrement" json:"id"`
	Name        string    `gorm:"column:name;type:VARCHAR(50);size:50;not null" json:"name"`
	Slug        string    `gorm:"column:slug;type:VARCHAR(50);size:50;uniqueIndex:uk_slug;not null" json:"slug"`
	Description string    `gorm:"column:description;type:VARCHAR(200);size:200;not null;default:''" json:"description"`
	ParentId    int64     `gorm:"column:parent_id;type:INT UNSIGNED;index:idx_parent;not null;default:0" json:"parent_id"`
	Status      int64     `gorm:"column:status;type:TINYINT;index:idx_status;not null;default:1" json:"status"`
	SortOrder   int64     `gorm:"column:sort_order;type:INT;not null;default:0" json:"sort_order"`
	CreatedAt   time.Time `gorm:"column:created_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt   time.Time `gorm:"column:updated_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP" json:"updated_at"`
}

func category_id() Column[int64] {
	return "id"
}

func (s *Category) ColumnId() Column[int64] {
	return category_id()
}

func category_name() Column[string] {
	return "name"
}

func (s *Category) ColumnName() Column[string] {
	return category_name()
}

func category_slug() Column[string] {
	return "slug"
}

func (s *Category) ColumnSlug() Column[string] {
	return category_slug()
}

func category_description() Column[string] {
	return "description"
}

func (s *Category) ColumnDescription() Column[string] {
	return category_description()
}

func category_parent_id() Column[int64] {
	return "parent_id"
}

func (s *Category) ColumnParentId() Column[int64] {
	return category_parent_id()
}

func category_status() Column[int64] {
	return "status"
}

func (s *Category) ColumnStatus() Column[int64] {
	return category_status()
}

func category_sort_order() Column[int64] {
	return "sort_order"
}

func (s *Category) ColumnSortOrder() Column[int64] {
	return category_sort_order()
}

func category_created_at() Column[time.Time] {
	return "created_at"
}

func (s *Category) ColumnCreatedAt() Column[time.Time] {
	return category_created_at()
}

func category_updated_at() Column[time.Time] {
	return "updated_at"
}

func (s *Category) ColumnUpdatedAt() Column[time.Time] {
	return category_updated_at()
}

func (t *Category) TableName() string {
	return Schema() + ".category"
}
