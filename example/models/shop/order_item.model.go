package shop

import "time"

/* ======================
** DO NOT EDIT THIS FILE!
** ======================
** GENERATED WITH GOMODEL
** Time: 2025-03-09T13:35:39+08:00
** Author: Gormodel
 */

type OrderItem struct {
	Id             int64     `gorm:"column:id;type:INT UNSIGNED;primaryKey;not null;autoIncrement" json:"id"`
	OrderId        int64     `gorm:"column:order_id;type:INT UNSIGNED;index:idx_order;not null" json:"order_id"`
	ProductId      int64     `gorm:"column:product_id;type:INT UNSIGNED;index:idx_product;not null" json:"product_id"`
	ProductName    string    `gorm:"column:product_name;type:VARCHAR(200);size:200;not null" json:"product_name"`
	ProductSku     string    `gorm:"column:product_sku;type:VARCHAR(50);size:50;not null" json:"product_sku"`
	ProductPrice   float64   `gorm:"column:product_price;type:DECIMAL(10,2);size:10;precision:2;not null;default:0.00" json:"product_price"`
	Quantity       int64     `gorm:"column:quantity;type:INT UNSIGNED;not null;default:1" json:"quantity"`
	TotalAmount    float64   `gorm:"column:total_amount;type:DECIMAL(10,2);size:10;precision:2;not null;default:0.00" json:"total_amount"`
	DiscountAmount float64   `gorm:"column:discount_amount;type:DECIMAL(10,2);size:10;precision:2;not null;default:0.00" json:"discount_amount"`
	CreatedAt      time.Time `gorm:"column:created_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP" json:"created_at"`
	UpdatedAt      time.Time `gorm:"column:updated_at;type:DATETIME;not null;default:CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP" json:"updated_at"`
}

func order_item_id() Column[int64] {
	return "id"
}

func (s *OrderItem) ColumnId() Column[int64] {
	return order_item_id()
}

func order_item_order_id() Column[int64] {
	return "order_id"
}

func (s *OrderItem) ColumnOrderId() Column[int64] {
	return order_item_order_id()
}

func order_item_product_id() Column[int64] {
	return "product_id"
}

func (s *OrderItem) ColumnProductId() Column[int64] {
	return order_item_product_id()
}

func order_item_product_name() Column[string] {
	return "product_name"
}

func (s *OrderItem) ColumnProductName() Column[string] {
	return order_item_product_name()
}

func order_item_product_sku() Column[string] {
	return "product_sku"
}

func (s *OrderItem) ColumnProductSku() Column[string] {
	return order_item_product_sku()
}

func order_item_product_price() Column[float64] {
	return "product_price"
}

func (s *OrderItem) ColumnProductPrice() Column[float64] {
	return order_item_product_price()
}

func order_item_quantity() Column[int64] {
	return "quantity"
}

func (s *OrderItem) ColumnQuantity() Column[int64] {
	return order_item_quantity()
}

func order_item_total_amount() Column[float64] {
	return "total_amount"
}

func (s *OrderItem) ColumnTotalAmount() Column[float64] {
	return order_item_total_amount()
}

func order_item_discount_amount() Column[float64] {
	return "discount_amount"
}

func (s *OrderItem) ColumnDiscountAmount() Column[float64] {
	return order_item_discount_amount()
}

func order_item_created_at() Column[time.Time] {
	return "created_at"
}

func (s *OrderItem) ColumnCreatedAt() Column[time.Time] {
	return order_item_created_at()
}

func order_item_updated_at() Column[time.Time] {
	return "updated_at"
}

func (s *OrderItem) ColumnUpdatedAt() Column[time.Time] {
	return order_item_updated_at()
}

func (t *OrderItem) TableName() string {
	return Schema() + ".order_item"
}
